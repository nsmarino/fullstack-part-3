{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","contactId","updatedContact","put","id","delete","Entry","person","removeEntry","name","number","onClick","Filter","props","htmlFor","value","newSearch","onChange","handleSearchChange","onKeyUp","searchResults","map","result","key","Contacts","persons","remove","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","handleClick","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setSearchResults","notify","setNotify","useEffect","numberService","storedNumbers","event","target","regex","RegExp","filter","match","doesInclude","find","preventDefault","window","confirm","contactToUpdate","res","catch","error","setTimeout","returnedPerson","concat","entry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71a143a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (contactId, updatedContact) => {\r\n    const request = axios.put(`${baseUrl}/${contactId}`, updatedContact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport numberService from './services/numbers'\r\n\r\n// import Countries from './components/Countries'\r\n\r\n\r\nconst Entry = ({person, removeEntry}) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number} \r\n      <button onClick={removeEntry}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  const results = () => \r\n    props.searchResults.map(result =>\r\n    <Entry key={result.name} person={result}/>)\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n      <label htmlFor=\"search\">search: </label>\r\n      <input name=\"search\" \r\n             value={props.newSearch} \r\n             onChange={props.handleSearchChange} \r\n             onKeyUp={props.handleSearchChange} />\r\n      </form>\r\n\r\n      <ul>\r\n      {results()}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contacts = (props) => {\r\n  const contactlist = () => props.persons.map(person => <Entry key={person.name} person={person} removeEntry={() => props.remove(person.id)}/>\r\n  )\r\n  \r\n  return (\r\n      <ul>\r\n      {contactlist()}\r\n      </ul>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\nreturn (\r\n        <form>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>number <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n        <div>\r\n          <button onClick={props.handleClick} type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className=\"confirmation\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newSearch, setNewSearch ] = useState('')\r\n  const [ searchResults, setSearchResults ] = useState([])\r\n  const [notify, setNotify] = useState('')\r\n\r\n  useEffect( () => {\r\n    numberService.getAll()\r\n      .then(storedNumbers => {\r\n        setPersons(storedNumbers)\r\n      })\r\n  }, [])\r\n \r\n  const handleClick = (event) => {\r\n    const doesInclude = persons.find(person => person.name === newName) ? true : false;\r\n    event.preventDefault()\r\n    if (newName === '' || newNumber === '') return;\r\n    if (doesInclude) {\r\n      if (window.confirm(`${newName} already exists in the contact list. Update phone number?`)) {\r\n        const contactToUpdate = persons.find(person => person.name === newName)\r\n        const updatedContact = {...contactToUpdate, number: newNumber}\r\n        numberService.update(contactToUpdate.id, updatedContact)\r\n          .then(numberService.getAll)\r\n          .then(res => setPersons(res))\r\n          .catch(error => {setNotify(`${contactToUpdate.name} has already been removed from this list. please refresh.`)\r\n          setTimeout(() => {\r\n            setNotify('');\r\n          }, 2000)})\r\n        setNewName('')\r\n        setNewNumber('')\r\n        return;\r\n      }\r\n      setNewName('')\r\n      setNewNumber('')\r\n      return;\r\n    }\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    numberService\r\n    .create(newPerson)\r\n      .then(returnedPerson => {\r\n        setNotify(`${returnedPerson.name} was added to contact list`)\r\n        setTimeout(() => {\r\n          setNotify('');\r\n        }, 2000)\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setPersons(persons.concat(returnedPerson))\r\n\r\n      })\r\n\r\n\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    setNewSearch(event.target.value);\r\n    const regex = new RegExp(newSearch, 'gi')\r\n    setSearchResults(persons.filter(person => person.name.match(regex)))\r\n  }\r\n  \r\n  const remove = id => {\r\n    const entry = persons.find(person => person.id === id)\r\n    if (window.confirm(`Delete ${entry.name}?`)) {\r\n      numberService.remove(entry.id).then(numberService.getAll).then(res => setPersons(res))\r\n    }\r\n  }\r\nreturn (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notify} />\r\n      <Filter newSearch={newSearch}\r\n              handleSearchChange={handleSearchChange}\r\n              searchResults={searchResults}\r\n      />\r\n      <h2>Add a contact</h2>\r\n      <PersonForm newName={newName}\r\n                  handleNameChange={handleNameChange}\r\n                  newNumber={newNumber}\r\n                  handleNumberChange={handleNumberChange}\r\n                  handleClick={handleClick}\r\n                  \r\n      />\r\n      <h2>Numbers go here</h2>\r\n      <Contacts persons={persons} remove={remove} />\r\n\r\n      {/* <h2>Country List</h2> */}\r\n      {/* <Countries /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nconst persons = [\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ]\n  ReactDOM.render(\n    <App persons={persons}/>,\n    document.getElementById('root')\n  )"],"sourceRoot":""}